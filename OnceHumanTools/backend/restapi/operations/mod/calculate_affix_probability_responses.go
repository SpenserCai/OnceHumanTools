// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/oncehuman/tools/models"
)

// CalculateAffixProbabilityOKCode is the HTTP code returned for type CalculateAffixProbabilityOK
const CalculateAffixProbabilityOKCode int = 200

/*
CalculateAffixProbabilityOK 计算成功

swagger:response calculateAffixProbabilityOK
*/
type CalculateAffixProbabilityOK struct {

	/*
	  In: Body
	*/
	Payload *models.AffixProbabilityResponse `json:"body,omitempty"`
}

// NewCalculateAffixProbabilityOK creates CalculateAffixProbabilityOK with default headers values
func NewCalculateAffixProbabilityOK() *CalculateAffixProbabilityOK {

	return &CalculateAffixProbabilityOK{}
}

// WithPayload adds the payload to the calculate affix probability o k response
func (o *CalculateAffixProbabilityOK) WithPayload(payload *models.AffixProbabilityResponse) *CalculateAffixProbabilityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate affix probability o k response
func (o *CalculateAffixProbabilityOK) SetPayload(payload *models.AffixProbabilityResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateAffixProbabilityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CalculateAffixProbabilityBadRequestCode is the HTTP code returned for type CalculateAffixProbabilityBadRequest
const CalculateAffixProbabilityBadRequestCode int = 400

/*
CalculateAffixProbabilityBadRequest 请求参数错误

swagger:response calculateAffixProbabilityBadRequest
*/
type CalculateAffixProbabilityBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCalculateAffixProbabilityBadRequest creates CalculateAffixProbabilityBadRequest with default headers values
func NewCalculateAffixProbabilityBadRequest() *CalculateAffixProbabilityBadRequest {

	return &CalculateAffixProbabilityBadRequest{}
}

// WithPayload adds the payload to the calculate affix probability bad request response
func (o *CalculateAffixProbabilityBadRequest) WithPayload(payload *models.ErrorResponse) *CalculateAffixProbabilityBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate affix probability bad request response
func (o *CalculateAffixProbabilityBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateAffixProbabilityBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
