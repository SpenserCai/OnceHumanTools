// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/oncehuman/tools/models"
)

// CalculateStrengthenProbabilityOKCode is the HTTP code returned for type CalculateStrengthenProbabilityOK
const CalculateStrengthenProbabilityOKCode int = 200

/*
CalculateStrengthenProbabilityOK 计算成功

swagger:response calculateStrengthenProbabilityOK
*/
type CalculateStrengthenProbabilityOK struct {

	/*
	  In: Body
	*/
	Payload *models.StrengthenProbabilityResponse `json:"body,omitempty"`
}

// NewCalculateStrengthenProbabilityOK creates CalculateStrengthenProbabilityOK with default headers values
func NewCalculateStrengthenProbabilityOK() *CalculateStrengthenProbabilityOK {

	return &CalculateStrengthenProbabilityOK{}
}

// WithPayload adds the payload to the calculate strengthen probability o k response
func (o *CalculateStrengthenProbabilityOK) WithPayload(payload *models.StrengthenProbabilityResponse) *CalculateStrengthenProbabilityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate strengthen probability o k response
func (o *CalculateStrengthenProbabilityOK) SetPayload(payload *models.StrengthenProbabilityResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateStrengthenProbabilityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CalculateStrengthenProbabilityBadRequestCode is the HTTP code returned for type CalculateStrengthenProbabilityBadRequest
const CalculateStrengthenProbabilityBadRequestCode int = 400

/*
CalculateStrengthenProbabilityBadRequest 请求参数错误

swagger:response calculateStrengthenProbabilityBadRequest
*/
type CalculateStrengthenProbabilityBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewCalculateStrengthenProbabilityBadRequest creates CalculateStrengthenProbabilityBadRequest with default headers values
func NewCalculateStrengthenProbabilityBadRequest() *CalculateStrengthenProbabilityBadRequest {

	return &CalculateStrengthenProbabilityBadRequest{}
}

// WithPayload adds the payload to the calculate strengthen probability bad request response
func (o *CalculateStrengthenProbabilityBadRequest) WithPayload(payload *models.ErrorResponse) *CalculateStrengthenProbabilityBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the calculate strengthen probability bad request response
func (o *CalculateStrengthenProbabilityBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CalculateStrengthenProbabilityBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
