// Code generated by go-swagger; DO NOT EDIT.

package mod

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// CalculateStrengthenProbabilityHandlerFunc turns a function with the right signature into a calculate strengthen probability handler
type CalculateStrengthenProbabilityHandlerFunc func(CalculateStrengthenProbabilityParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CalculateStrengthenProbabilityHandlerFunc) Handle(params CalculateStrengthenProbabilityParams) middleware.Responder {
	return fn(params)
}

// CalculateStrengthenProbabilityHandler interface for that can handle valid calculate strengthen probability params
type CalculateStrengthenProbabilityHandler interface {
	Handle(CalculateStrengthenProbabilityParams) middleware.Responder
}

// NewCalculateStrengthenProbability creates a new http.Handler for the calculate strengthen probability operation
func NewCalculateStrengthenProbability(ctx *middleware.Context, handler CalculateStrengthenProbabilityHandler) *CalculateStrengthenProbability {
	return &CalculateStrengthenProbability{Context: ctx, Handler: handler}
}

/*
	CalculateStrengthenProbability swagger:route POST /mod/strengthen/probability Mod calculateStrengthenProbability

计算强化成功概率

计算模组词条强化到目标等级的概率
*/
type CalculateStrengthenProbability struct {
	Context *middleware.Context
	Handler CalculateStrengthenProbabilityHandler
}

func (o *CalculateStrengthenProbability) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewCalculateStrengthenProbabilityParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
